import 'dart:convert';

import 'package:flutter_test/flutter_test.dart';
import 'package:latlong2/latlong.dart';
import 'package:xcnav/models/flight_log.dart';
import 'package:xcnav/models/fuel_report.dart';
import 'package:xcnav/models/gear.dart';
import 'package:xcnav/models/geo.dart';
import 'package:xcnav/models/waypoint.dart';

void main() {
  test('Log Fidelity', () {
    final gear = Gear();
    gear.wingMakeModel = "1234ok";
    gear.tankSize = 12;
    gear.bladderSize = 1.2;

    final log = FlightLog(samples: [
      Geo(lat: 34, lng: 120, alt: 0.1, timestamp: const Duration().inMilliseconds),
      Geo(lat: 34, lng: 120.1, alt: 0.2, spd: 15.3974637, timestamp: const Duration(minutes: 10).inMilliseconds),
      Geo(lat: 34.1, lng: 120.2, alt: 0.3, spd: 24.0537096, timestamp: const Duration(minutes: 20).inMilliseconds),
    ], waypoints: [
      Waypoint(name: "test", latlngs: [const LatLng(35, 121)], icon: "star", color: 0xFFD0E1B2),
      Waypoint(name: "test_path", latlngs: [const LatLng(35, 121), const LatLng(35.2, 121)], color: 0xFFA5C130)
    ], fuelReports: [
      FuelReport(DateTime.fromMillisecondsSinceEpoch(const Duration(minutes: 1).inMilliseconds), 10.0),
      FuelReport(DateTime.fromMillisecondsSinceEpoch(const Duration(minutes: 10).inMilliseconds), 5.0),
    ], gear: gear);

    expect(log.toJson(), FlightLog.fromJson("", jsonDecode(log.toJson())).toJson());

    final loadedLog = FlightLog.fromJson("", jsonDecode(log.toJson()));
    final newLog = FlightLog(
        samples: loadedLog.samples,
        waypoints: loadedLog.waypoints,
        fuelReports: loadedLog.fuelReports,
        gear: loadedLog.gear,
        filename: loadedLog.filename);
    expect(jsonDecode(loadedLog.toJson()), jsonDecode(newLog.toJson()));

    expect(loadedLog.samples.length, 3);
    expect(loadedLog.fuelReports.length, 2);
    expect(loadedLog.gear?.wingMakeModel, "1234ok");
    expect(loadedLog.gear?.tankSize, 12);
  });

  test("trim - start clean cut", () {
    final log = FlightLog(samples: [
      Geo(lat: 34, lng: 120, alt: 0.1, timestamp: const Duration().inMilliseconds),
      Geo(lat: 34, lng: 120.1, alt: 0.2, spd: 15.3974637, timestamp: const Duration(minutes: 10).inMilliseconds),
      Geo(lat: 34.05, lng: 120.15, alt: 0.25, spd: 23.0537096, timestamp: const Duration(minutes: 15).inMilliseconds),
      Geo(lat: 34.1, lng: 120.2, alt: 0.3, spd: 24.0537096, timestamp: const Duration(minutes: 20).inMilliseconds),
    ], fuelReports: [
      FuelReport(DateTime.fromMillisecondsSinceEpoch(const Duration(minutes: 1).inMilliseconds), 10.0),
      FuelReport(DateTime.fromMillisecondsSinceEpoch(const Duration(minutes: 10).inMilliseconds), 5.0),
      FuelReport(DateTime.fromMillisecondsSinceEpoch(const Duration(minutes: 20).inMilliseconds), 0.0),
    ]);

    expect(log.fuelReports.length, 3);

    final trimmed = log.trimLog(1, 3);

    // Check samples
    expect(trimmed.samples.length, 3);

    // Check fuel
    expect(trimmed.fuelReports.length, 2);
    expect(trimmed.fuelReports.first.amount, 5.0);
    expect(trimmed.fuelReports.first.time,
        DateTime.fromMillisecondsSinceEpoch(const Duration(minutes: 10).inMilliseconds));
  });

  test("trim - start interpolated", () {
    final log = FlightLog(samples: [
      Geo(lat: 34, lng: 120, alt: 0.1, timestamp: const Duration().inMilliseconds),
      Geo(lat: 34, lng: 120.1, alt: 0.2, spd: 15.3974637, timestamp: const Duration(minutes: 10).inMilliseconds),
      Geo(lat: 34.05, lng: 120.15, alt: 0.25, spd: 23.0537096, timestamp: const Duration(minutes: 15).inMilliseconds),
      Geo(lat: 34.1, lng: 120.2, alt: 0.3, spd: 24.0537096, timestamp: const Duration(minutes: 20).inMilliseconds),
    ], fuelReports: [
      FuelReport(DateTime.fromMillisecondsSinceEpoch(const Duration(minutes: 1).inMilliseconds), 10.0),
      FuelReport(DateTime.fromMillisecondsSinceEpoch(const Duration(minutes: 13).inMilliseconds), 5.0),
      FuelReport(DateTime.fromMillisecondsSinceEpoch(const Duration(minutes: 20).inMilliseconds), 0.0),
    ]);

    expect(log.fuelReports.length, 3);

    final trimmed = log.trimLog(1, 3);

    // Check samples
    expect(trimmed.samples.length, 3);

    // Check fuel
    expect(trimmed.fuelReports.length, 3);
    expect(trimmed.fuelReports.first.amount, 6.25);
    expect(trimmed.fuelReports.first.time,
        DateTime.fromMillisecondsSinceEpoch(const Duration(minutes: 10).inMilliseconds));
  });

  test("trim - end clean cut", () {
    final log = FlightLog(samples: [
      Geo(lat: 34, lng: 120, alt: 0.1, timestamp: const Duration().inMilliseconds),
      Geo(lat: 34, lng: 120.1, alt: 0.2, spd: 15.3974637, timestamp: const Duration(minutes: 10).inMilliseconds),
      Geo(lat: 34.05, lng: 120.15, alt: 0.25, spd: 23.0537096, timestamp: const Duration(minutes: 15).inMilliseconds),
      Geo(lat: 34.1, lng: 120.2, alt: 0.3, spd: 24.0537096, timestamp: const Duration(minutes: 20).inMilliseconds),
    ], fuelReports: [
      FuelReport(DateTime.fromMillisecondsSinceEpoch(const Duration(minutes: 1).inMilliseconds), 10.0),
      FuelReport(DateTime.fromMillisecondsSinceEpoch(const Duration(minutes: 15).inMilliseconds), 5.0),
      FuelReport(DateTime.fromMillisecondsSinceEpoch(const Duration(minutes: 20).inMilliseconds), 0.0),
    ]);

    expect(log.fuelReports.length, 3);

    final trimmed = log.trimLog(0, 2);

    // Check samples
    expect(trimmed.samples.length, 3);

    // Check fuel
    expect(trimmed.fuelReports.length, 2);
    expect(trimmed.fuelReports.last.amount, 5.0);
    expect(
        trimmed.fuelReports.last.time, DateTime.fromMillisecondsSinceEpoch(const Duration(minutes: 15).inMilliseconds));
  });

  test("trim - end interpolated", () {
    final log = FlightLog(samples: [
      Geo(lat: 34, lng: 120, alt: 0.1, timestamp: const Duration().inMilliseconds),
      Geo(lat: 34, lng: 120.1, alt: 0.2, spd: 15.3974637, timestamp: const Duration(minutes: 10).inMilliseconds),
      Geo(lat: 34.05, lng: 120.15, alt: 0.25, spd: 23.0537096, timestamp: const Duration(minutes: 15).inMilliseconds),
      Geo(lat: 34.1, lng: 120.2, alt: 0.3, spd: 24.0537096, timestamp: const Duration(minutes: 20).inMilliseconds),
    ], fuelReports: [
      FuelReport(DateTime.fromMillisecondsSinceEpoch(const Duration(minutes: 1).inMilliseconds), 10.0),
      FuelReport(DateTime.fromMillisecondsSinceEpoch(const Duration(minutes: 14).inMilliseconds), 6.0),
      FuelReport(DateTime.fromMillisecondsSinceEpoch(const Duration(minutes: 17).inMilliseconds), 0.0),
    ]);

    expect(log.fuelReports.length, 3);

    final trimmed = log.trimLog(0, 2);

    // Check samples
    expect(trimmed.samples.length, 3);

    // Check fuel
    expect(trimmed.fuelReports.length, 3);
    expect(trimmed.fuelReports.last.amount, 4.0);
    expect(
        trimmed.fuelReports.last.time, DateTime.fromMillisecondsSinceEpoch(const Duration(minutes: 15).inMilliseconds));
  });

  test("FuelReport - insert", () {
    final log = FlightLog(samples: [
      Geo(lat: 34, lng: 120, alt: 1, timestamp: const Duration().inMilliseconds),
      Geo(lat: 34, lng: 120.1, alt: 200, spd: 15.3974637, timestamp: const Duration(minutes: 10).inMilliseconds),
      Geo(lat: 34.1, lng: 120.2, alt: 240, spd: 24.0537096, timestamp: const Duration(minutes: 20).inMilliseconds),
      Geo(lat: 34.1, lng: 120.2, alt: 0.1, timestamp: const Duration(minutes: 30).inMilliseconds),
      Geo(lat: 34.3, lng: 120.1, alt: 0.2, spd: 15.3974637, timestamp: const Duration(minutes: 50).inMilliseconds),
      Geo(lat: 34.4, lng: 120.2, alt: 0.3, spd: 24.0537096, timestamp: const Duration(minutes: 80).inMilliseconds),
    ]);

    log.insertFuelReport(DateTime.fromMillisecondsSinceEpoch(const Duration(minutes: 2).inMilliseconds), 12);

    expect(log.sumFuelStat, null);

    log.insertFuelReport(DateTime.fromMillisecondsSinceEpoch(const Duration(minutes: 12).inMilliseconds), 10);

    expect(log.fuelStats.length, 1);

    expect(log.sumFuelStat?.amount, 2);
    expect(log.sumFuelStat?.mpl, 4619.239121840687);
  });

  test("from IGC short", () {
    const raw = """
AXFH000
HFDTE060524
HFPLTPILOT:John Smith
HFGTYGLIDERTYPE:DaVinci  Disco 18m
HFDTM100GPSDATUM:WGS84
HFRFWFIRMWAREVERSION:8.2.1
HFRHWHARDWAREVERSION:iPhone 13 Pro Max
HFFTYFRTYPE:Flyskyhy,8.2.1
HFGPS:Internal
HFPRSVARIO:Internal Vario
HFCCLCOMPETITIONCLASS:Paramotor
HFTZNTIMEZONE:-7
I053638FXA3941VXA4244GSP4547CCO4850HDT
C060524145028060524000100TASK
C0000000N00000000ETAKEOFF
C4352360N08839371W00000000000400000000360000STARTAREA Pickett Steam & Gas En
C4358088N08833673W00000000000400000000360000FINISHAREA Oshkosh Ultralight Fi
C0000000N00000000ELANDING
B1451123826476N12235552WA0037200372005003028292000
""";

    final log = FlightLog.fromIGC(raw);
    expect(log.goodFile, true);

    // B145112 38'26.476N 122'35.552W A 00372 00372 005003028292000
    expect(log.samples.first.lat, 38 + 26.476 / 60);
    expect(log.samples.first.lng, -122 - 35.552 / 60);
    expect(log.samples.first.alt, 372);
  });

  test("from IGC long", () {
    const raw = """AXFH000
HFDTE270624
HFPLTPILOT:John Smith
HFGTYGLIDERTYPE:DaVinci  Disco 18m
HFDTM100GPSDATUM:WGS84
HFRFWFIRMWAREVERSION:8.2.3
HFRHWHARDWAREVERSION:iPhone 13 Pro Max
HFFTYFRTYPE:Flyskyhy,8.2.3
HFGPS:Internal
HFPRSVARIO:Internal Vario
HFCCLCOMPETITIONCLASS:Paramotor
HFTZNTIMEZONE:-7
I053638FXA3941VXA4244GSP4547CCO4850HDT
C270624142847270624000100TASK
C0000000N00000000ETAKEOFF
C4352360N08839371W00000000000400000000360000STARTAREA Pickett Steam & Gas En
C4358088N08833673W00000000000400000000360000FINISHAREA Oshkosh Ultralight Fi
C0000000N00000000ELANDING
B1429323826810N12236459WA0050000500005003043295347
B1429363826820N12236486WA0049800501004003042297331
B1429373826823N12236493WA0049900501004003043294335
B1429383826826N12236501WA0050000501004003043297179
B1429393826830N12236508WA0050000501004003043301268
B1429403826833N12236515WA0050100501004003044307012
B1429413826837N12236522WA0050100501004003044303326
B1429433826840N12236529WA0050000502004003042300320
B1429443826843N12236535WA0050000502004003042298328
B1429453826846N12236542WA0050100503004003041300342
B1429463826850N12236549WA0050100504004003041302323
B1429473826853N12236556WA0050200504004003042301339
B1429523826869N12236588WA0050300511004003037306319
B1429573826884N12236614WA0051200518004003032316305
B1430023826901N12236644WA0052000527004003029304301
B1430073826914N12236667WA0052700527004003038298304
B1430123826927N12236693WA0052800535004003026292303
B1430173826931N12236727WA0053600537004003042265275
B1430223826922N12236766WA0053800542004003041258260
B1430273826905N12236802WA0054300544004003047238237
B1430323826885N12236839WA0054400548004003049228236
B1430373826862N12236875WA0054600547004003054227236
B1430423826840N12236913WA0054700547004003047238248
B1430473826822N12236953WA0054700547004003048246252
B1430523826805N12236993WA0054600547004003047246250
B1430573826792N12237033WA0054800549004003046250256
B1431023826781N12237074WA0054900550004003046249257
B1431073826772N12237112WA0055100552004003041252263
B1431123826763N12237149WA0055100550004003041255264
B1431173826755N12237187WA0055100550004003041258264
B1431223826748N12237225WA0055100550004003041253264
B1431273826740N12237261WA0055200551004003039249260
B1431323826731N12237296WA0055200551004003039252262
B1431373826723N12237331WA0055200551004003037261268
B1431423826715N12237367WA0055100553004003040250257
B1431473826706N12237401WA0055200555004003041247258
B1431523826697N12237430WA0055400555004003041249260
B1431573826684N12237468WA0055500556004003045245252
B1432023826669N12237506WA0055600558004003044241249
B1432073826653N12237543WA0055700559004003044239249
B1432123826622N12237580WA0056100561004003053208216
B1432173826580N12237603WA0056100560004003065194203
B1432223826535N12237624WA0056000558004003063200209
B1432273826491N12237647WA0055800558004003061207213
B1432323826451N12237672WA0055800558004003060209213
B1432373826411N12237698WA0055900558004003061205211
B1432423826372N12237725WA0055800557004003059207217
B1432473826331N12237752WA0055800558004003061204214
B1432523826285N12237774WA0055800558004003067200205
B1432573826240N12237795WA0055800560004003064198205
B1433023826192N12237814WA0056000561004003067198202
B1433073826144N12237832WA0056100563004003068196200
B1433123826094N12237848WA0056300564004003070189198
B1433173826042N12237861WA0056700567004003071189195
B1433223825990N12237873WA0056700569004003071188195
B1433273825937N12237882WA0056900570004003072191191
B1433323825885N12237899WA0057000571004003068198201
B1433373825838N12237919WA0057200573004003065201213
B1433423825794N12237943WA0057100572004003064203209
B1433473825753N12237968WA0057000576004003060202216
B1433523825712N12237992WA0057600578004003061207217
B1433573825679N12238013WA0057800580004003062208216
B1434023825639N12238039WA0058100583004003061208217
B1434073825600N12238067WA0058400587004003060207221
B1434123825563N12238094WA0058600589004003057209225
B1434173825518N12238130WA0058900592004003056211230
B1434223825482N12238159WA0059200594004003057215230
B1434273825446N12238188WA0059400598004003057210224
B1434323825410N12238216WA0059900600004003058210225
B1434373825371N12238242WA0060000601004003061201218
B1434423825323N12238258WA0060100602004003069191196
B1434473825269N12238264WA0060000603004003073184179
B1434523825213N12238265WA0060100603004003077177181
B1434573825157N12238267WA0060200604004003075179176
B1435023825103N12238272WA0060200603004003072183185
B1435073825049N12238279WA0060200602004003071187188
B1435123824997N12238287WA0060200603004003069189189
B1435173824946N12238296WA0060200603004003068189188
B1435223824894N12238305WA0060300605004003070184183
B1435273824842N12238310WA0060400606004003072181180
B1435323824788N12238313WA0060500607004003073181180
B1435373824733N12238312WA0060700608004003074173173
B1435423824676N12238299WA0060800609004003077167163
B1435473824620N12238277WA0060800609004003078162155
B1435523824566N12238247WA0060800608004003079155146
B1435573824513N12238212WA0060700606004003079149139
B1436023824473N12238181WA0060600605004003079146142
B1436073824423N12238141WA0060500604004003078146143
B1436123824374N12238099WA0060400603004003079148141
B1436173824326N12238057WA0060400604004003077145136
B1436223824269N12238005WA0060500605004003078144135
B1436273824222N12237962WA0060500607004003078143135
B1436323824175N12237919WA0060800609004003079142135
B1436373824128N12237874WA0060900611004003079143136
B1436423824080N12237828WA0061200614004003080144136
B1436473824031N12237784WA0061500617004003080144136
B1436523823982N12237740WA0061700619004003081145139
B1436573823931N12237699WA0061900621004003081146141
B1437023823881N12237660WA0061700622004003079148150
B1437073823832N12237620WA0061900622004003078147119
B1437123823784N12237578WA0062200622004003079145126
B1437173823738N12237532WA0062200621004003078138125
B1437223823700N12237479WA0062100622004003074127107
B1437273823672N12237419WA0062200622004003073116095
B1437323823651N12237357WA0062200623004003071108089
B1437373823634N12237293WA0062100623004003069102087
B1437423823620N12237229WA0062100623004003071103091
B1437473823607N12237164WA0062200623004003072106092
B1437523823597N12237099WA0062300625004003068099084
B1437573823593N12237037WA0062500627004003065088070
B1438023823597N12236980WA0062700629004003058081058
B1438073823604N12236937WA0062700627004003056074051
B1438123823617N12236885WA0062500623004003058071046
B1438173823630N12236834WA0062100619004003055070044
B1438223823647N12236790WA0061600608004003053062033
B1438273823668N12236745WA0060200592004003045052020
B1438323823687N12236705WA0059100588004003046056027
B1438373823709N12236666WA0058400579004003053052023
B1438423823732N12236632WA0057700574004003047050016
B1438473823756N12236597WA0057100568004003048048016
B1438523823779N12236562WA0056700565004003048043017
B1438573823808N12236530WA0056400565004003055047016
B1439023823834N12236496WA0056400567004003045043012
B1439073823860N12236460WA0056500564004003054060018
B1439123823874N12236410WA0056600567004003059076054
B1439173823886N12236359WA0056900573004003053071044
B1439223823897N12236305WA0057400575004003059080055
B1439273823900N12236246WA0057600580004003061088074
B1439323823905N12236189WA0058100583004003060076060
B1439373823909N12236138WA0058500592004003052093074
B1439423823915N12236081WA0058800590004003065082060
B1439473823918N12236027WA0059100593004003055084066
B1439523823923N12235969WA0059200593004003060084066
B1439573823928N12235915WA0059100587004003056075058
B1440023823939N12235867WA0058700583004003050069044
B1440073823954N12235825WA0058200580004003047059031
B1440133823972N12235790WA0057900577004003042058019
B1440183823992N12235754WA0057700577004003046050020
B1440233824012N12235718WA0057600577004003045056021
B1440283824030N12235681WA0057700577004003047056023
B1440333824052N12235637WA0057800581004003044055023
B1440383824069N12235599WA0058000582004003048061030
B1440433824088N12235561WA0058100583004003050059025
B1440483824106N12235521WA0058300585004003049065031
B1440533824122N12235481WA0058500588004003046058024
B1440583824140N12235448WA0058700591004003041052014
B1441033824159N12235421WA0059000592004003035037004
B1441083824180N12235401WA0059000589004003037034358
B1441133824202N12235381WA0058900590004003036054003
B1441183824220N12235359WA0058700585004003035034353
B1441233824241N12235339WA0058400584004003036042000
B1441283824261N12235314WA0058300584004003039046005
B1441333824282N12235289WA0058400586004003039042002
B1441383824303N12235264WA0058600590004003037041001
B1441433824323N12235239WA0058900591004003039045006
B1441483824343N12235214WA0059000591004003041048007
B1441533824364N12235186WA0059100593004003040048008
B1441583824384N12235155WA0059300596004003042049013
B1442033824403N12235124WA0059600600004003041050014
B1442083824423N12235093WA0060000603004003042049013
B1442133824442N12235062WA0060300607004003042054016
B1442183824461N12235030WA0060700611022003043055017
B1442233824476N12235004WA0060900615022003041048013
B1442283824497N12234976WA0061400616022003042047011
B1442333824521N12234941WA0061500616022003041049013
B1442383824542N12234910WA0061400613022003043051014
B1442433824562N12234880WA0061200610022003041047010
B1442483824584N12234852WA0061000609022003041046007
B1442533824606N12234823WA0060900608022003042046009
B1442583824627N12234792WA0060700607022003043048014
B1443033824649N12234761WA0060700607022003043046011
B1443083824672N12234731WA0060600605022003045047011
B1443133824694N12234697WA0060400603004003047052018
B1443183824715N12234661WA0060200601004003046052019
B1443233824736N12234627WA0060100600004003045050020
B1443283824757N12234600WA0059900598004003040044005
B1443333824779N12234574WA0059800597004003040047006
B1443383824799N12234546WA0059600596004003040047008
B1443433824820N12234519WA0059500595004003038042005
B1443483824841N12234493WA0059400594004003040042006
B1443533824863N12234470WA0059300592004003037038359
B1443583824884N12234447WA0059100590004003038040002
B1444033824906N12234423WA0058900590004003037040003
B1444083824927N12234403WA0058800587004003035033354
B1444133824951N12234382WA0058500583004003038034358
B1444183824974N12234357WA0058200579004003042043008
B1444233824998N12234336WA0057700574004003037024353
B1444293825024N12234319WA0057100568004003040031357
B1444353825055N12234299WA0056600563004003039027352
B1444403825086N12234280WA0056100558004003037023351
B1444453825113N12234267WA0055700553004003039020347
B1444503825140N12234253WA0055100549004003039023350
B1444553825168N12234236WA0054700544004003041027353
B1445003825195N12234217WA0054300539004003042031357
B1445053825222N12234195WA0053800535004003043034359
B1445103825249N12234174WA0053200531004003041022354
B1445153825278N12234159WA0052800524004003042023351
B1445203825308N12234142WA0052100516004003045026354
B1445253825341N12234123WA0051400509004003049023354
B1445303825374N12234101WA0050800504004003049029359
B1445353825406N12234081WA0050200498004003048026355
B1445403825438N12234062WA0049600492004003048023352
B1445453825472N12234044WA0049100486004003048021353
B1445503825506N12234026WA0048500480004003049020353
E144555PEVBackground
B1445553825540N12234009WA0047800474004003050023002
B1446003825575N12233990WA0047400469004003050024338
B1446053825608N12233969WA0047000463004003050028335
B1446103825641N12233945WA0046800458004003051029354
B1446153825674N12233920WA0046100452004003052031304
B1446203825708N12233891WA0045300449004003052035345
B1446253825741N12233863WA0044900444004003054034355
B1446303825774N12233839WA0044300439004003050018355
B1446353825807N12233837WA0043700435004003042352355
B1446403825836N12233839WA0043300432004003041000355
B1446453825866N12233840WA0043100429004003038346355
B1446503825894N12233850WA0042800426004003037341355
B1446553825919N12233864WA0042500423004003037335355
B1447003825942N12233882WA0042300422004003033328355
B1447053825962N12233901WA0041800415004003034316355
B1447103825982N12233922WA0041500410004003034324355
B1447153826004N12233939WA0041000406004003034331355
B1447203826027N12233953WA0040500403004003036338355
B1447253826053N12233963WA0040000400004003035346355
B1447303826068N12233982WA0039600393004003034278355
B1447353826033N12233990WA0038700384004003069147337
B1447403826019N12233934WA0038000377004003062072007
B1447453826037N12233888WA0037400372004003055063352
B1447503826057N12233841WA0036700365004003053061354
B1447553826072N12233793WA0036100358004003058075355
B1448003826062N12233741WA0035400349004003064130349
B1448053826024N12233720WA0034500340004003054183015
B1448103825996N12233744WA0033600330004003045249011
B1448153825975N12233772WA0032700321004003052193355
B1448203825941N12233746WA0031600307004003067103319
B1448253825963N12233716WA0030400298004003041340004
B1448303825985N12233740WA0029300288004003045324350
B1448353826009N12233766WA0028400282004003039328353
B1448403826035N12233747WA0027800268004003057070355
B1448453826024N12233705WA0026600263004003049136344
B1448503825994N12233673WA0025700251004003054146354
B1448553825961N12233655WA0024900247004003046177023
B1449003825933N12233679WA0024200239004003048242030
B1449053825936N12233715WA0023500230004003043311341
B1449103825967N12233716WA0022600220004003050043353
B1449153825990N12233684WA0021700210004003047024353
B1449203826024N12233688WA0020900203004003047313355
B1449253826018N12233726WA0020000191004003052202349
B1449303825985N12233721WA0018900187004003042175013
B1449353825960N12233743WA0018300177004003046247009
B1449403825967N12233784WA0017300168004003049313348
B1449453825991N12233817WA0016600165004003045311357
B1449503826012N12233855WA0016200160004003048299356
B1449553826027N12233892WA0015600154004003044300355
B1450003826042N12233926WA0015100152004003040299355
B1450053826054N12233952WA0014900151004003026301355
B1450103826060N12233965WA0014700151004003012287355
B1450153826061N12233969WA0014600151004003000302355
B1450203826062N12233969WA0014600151004003000301355
B1450253826061N12233969WA0014600151004003000301355
B1450303826061N12233969WA0014600151004003000301355
B1450353826061N12233969WA0014600151004003000301355
B1450403826061N12233969WA0014600151004003000301355""";
    final log = FlightLog.fromIGC(raw);
    expect(log.goodFile, true);

    // B14/29/32 38'26.810N 122'36.459W A 00500 00500 005003043295347
    expect(log.samples.first.lat, 38 + 26.81 / 60);
    expect(log.samples.first.lng, -122 - 36.459 / 60);
    expect(log.samples.first.alt, 500);

    // B14/50/40 38'26.061N 122'33.969W A 00146 00151 004003000301355
    expect(log.samples.last.lat, 38 + 26.061 / 60);
    expect(log.samples.last.lng, -122 - 33.969 / 60);
    expect(log.samples.last.alt, 151);
  });
}
